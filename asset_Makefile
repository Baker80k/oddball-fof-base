SHELL=/bin/bash

.DEFAULT_GOAL := goongame_assets.vpk

# The pathing in this project gets a little funny because the valve compilation tools
# are really particular about where they're executed, so in order to preserve the custom folder strcuture
# we need to do some pathing shenanigans
# Set these ABSOLUTE PATHS in your .bashrc
# FOF_INSTALL_DIR // sdk things like vpk and studiomdl

# This makefile should be sitting in the directory above WEAPON_MODEL_DIR
# It will attempt to copy the required files into a new folder called goongame_models
# Which then gets vpk'd

# This is for my setup where I have a windows machine with the game,
# while my dev environment and fof server is on wsl
# For your own use, overwrite things in your .bashrc to whatever
VPK="$(FOF_INSTALL_DIR)/sdk/bin/vpk.exe"
STUDIOMDL="$(FOF_INSTALL_DIR)/sdk/bin/studiomdl.exe"

define extract_up_to_target
	$(shell echo $(1) | sed 's|\(.*$(2)\).*|\1|')
endef

override working_model_dir=$(shell basename $(WEAPON_MODEL_DIR))

override goongame_weapon_folders=$(shell find $(working_model_dir) -maxdepth 1 -mindepth 1 -type d 2>/dev/null)
override goongame_weapon_names=$(shell find $(working_model_dir) -maxdepth 1 -mindepth 1 -type d -exec basename {} \;)

override goongame_weapon_mdls=$(shell find $(working_model_dir) -name '*.mdl' 2>/dev/null)
override goongame_weapon_vtxs=$(shell find $(working_model_dir) -name '*.vtx' 2>/dev/null)
override goongame_weapon_phys=$(shell find $(working_model_dir) -name '*.phy' 2>/dev/null)
override goongame_weapon_vvds=$(shell find $(working_model_dir) -name '*.vvd' 2>/dev/null)

override goongame_weapon_vmts=$(shell find $(working_model_dir) -name '*.vmt' 2>/dev/null)
override goongame_weapon_vtfs=$(shell find $(working_model_dir) -name '*.vtf' 2>/dev/null)

override goongame_weapon_wavs=$(shell find $(working_model_dir) -name '*.wav' 2>/dev/null)

override all_goongame_weapon_materials=$(foreach path,$(goongame_weapon_vmts),$(call extract_up_to_target,$(path),materials)) $(foreach path,$(goongame_weapon_vtfs),$(call extract_up_to_target,$(path),materials))
override goongame_weapon_materials=$(shell echo $(all_goongame_weapon_materials) | tr ' ' '\n' | sort -u | tr '\n' ' ')

override all_goongame_weapon_sound=$(foreach path, $(goongame_weapon_wavs),$(call extract_up_to_target,$(path),sound))
override goongame_weapon_sound=$(shell echo $(all_goongame_weapon_sound) | tr ' ' '\n' | sort -u | tr '\n' ' ')

goongame_assets.vpk: $(goongame_weapon_mdls) $(goongame_weapon_vtxs) $(goongame_weapon_phys) $(goongame_weapon_vvds) $(goongame_weapon_vmts) $(goongame_weapon_vtfs) $(goongame_weapon_wavs)
	@mkdir -p goongame_assets/models/weapons
	@cp -u $(goongame_weapon_mdls) goongame_assets/models/weapons
	@cp -u $(goongame_weapon_vtxs) goongame_assets/models/weapons
	@cp -u $(goongame_weapon_phys) goongame_assets/models/weapons
	@cp -u $(goongame_weapon_vvds) goongame_assets/models/weapons

	@mkdir -p goongame_assets/materials
	@cp -r $(goongame_weapon_materials) goongame_assets

	@mkdir -p goongame_assets/sound
	@cp -r $(goongame_weapon_sound) goongame_assets

	$(VPK) goongame_assets

